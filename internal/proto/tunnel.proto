syntax = "proto3";

package tunnel;
option go_package = "github.com/cryptexus/go-tunnel/internal/proto";

service TunnelService {
  rpc CreateTunnel (CreateTunnelRequest) returns (CreateTunnelResponse) {}
  rpc CloseTunnel (CloseTunnelRequest) returns (CloseTunnelResponse) {}
  rpc ListTunnels (ListTunnelsRequest) returns (ListTunnelsResponse) {}
  rpc CloseAllTunnels (CloseAllTunnelsRequest) returns (CloseAllTunnelsResponse) {}
}

message CreateTunnelRequest {
  string host = 1;
  int32 local_port = 2;
  int32 remote_port = 3;
}

message CreateTunnelResponse {
  bool success = 1;
  string error = 2;
}

message CloseTunnelRequest {
  string host = 1;
  int32 remote_port = 2;
}

message CloseTunnelResponse {
  bool success = 1;
  string error = 2;
}

message ListTunnelsRequest {}

message ListTunnelsResponse {
    message TunnelInfo {
    string host = 1;
    int32 local_port = 2;
    int32 remote_port = 3;
    int64 last_activity = 4;  // Unix timestamp of last activity
    int64 created_at = 5;     // Unix timestamp of tunnel creation
    uint64 bytes_sent = 6;    // Total bytes sent
    uint64 bytes_received = 7; // Total bytes received
    double bandwidth_up = 8;   // Current upload bandwidth (bytes/sec)
    double bandwidth_down = 9; // Current download bandwidth (bytes/sec)
  }
  repeated TunnelInfo tunnels = 1;
}

message CloseAllTunnelsRequest {}

message CloseAllTunnelsResponse {
  bool success = 1;
  string error = 2;
  int32 count = 3;
}


